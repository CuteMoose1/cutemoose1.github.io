#include <stdio.h>
#include <stdlib.h>

struct node {
  int data;
  struct node *next;
};

struct node *create_node(int data) {
  struct node *new_node = malloc(sizeof(struct node));
  new_node->data = data;
  new_node->next = NULL;
  return new_node;
}

void insert_node(struct node **head, int data) {
  struct node *new_node = create_node(data);
  if (*head == NULL) {
    *head = new_node;
    new_node->next = *head;  // Point to itself in a circular manner
  } else {
    struct node *current_node = *head;
    while (current_node->next != *head) {
      current_node = current_node->next;
    }
    current_node->next = new_node;
    new_node->next = *head;  // Make the new node point to the head, completing the circle
  }
}

void print_list(struct node *head) {
  if (head == NULL) {
    printf("List is empty.\n");
    return;
  }

  struct node *current = head;
  do {
    printf("%d ", current->data);
    current = current->next;
  } while (current != head);
  printf("\n");
}

void sort_list(struct node *head) {
  if (head == NULL) {
    printf("List is empty.\n");
    return;
  }

  struct node *current = head;
  struct node *next_node;
  int temp;

  do {
    next_node = current->next;
    while (next_node != head) {
      if (current->data > next_node->data) {
        temp = current->data;
        current->data = next_node->data;
        next_node->data = temp;
      }
      next_node = next_node->next;
    }
    current = current->next;
  } while (current->next != head);
}

int main() {
  struct node *head = NULL;
  int data;
  
  int n;
  printf("Enter the number of nodes: ");
  scanf("%d", &n);
  
  for (int i = 0; i < n; i++) {
    printf("Enter data: ");
    scanf("%d", &data);
    insert_node(&head, data);
  }

  printf("Original List: ");
  print_list(head);

  sort_list(head);

  printf("Sorted List (Ascending Order): ");
  print_list(head);

  return 0;
}
